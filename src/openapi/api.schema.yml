openapi: 3.0.3
info:
  description: API for Slice Dice Service.
  version: 1.0.0
  title: Slice Dice Base API

tags:
  - name: SliceDice
    description: SliceDice related apis.

paths:

  /auth/login:
    post:
      tags:
        - SliceDice
      summary: Save The Slice Dice  Selections
      operationId: postSaveRepo
      requestBody:
        description: 'save repo selections'
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserEntity'
      responses:
        '201':
          description: 'User has been successfully created'
          content:
            application/json:
              schema:
                type: object
                required: [ 'id' ]
                properties:
                  id:
                    type: string
                    format: 'uuid'
                  revision:
                    type: string
          headers:
            Location:
              schema:
                type: string
                format: URI
        '400':
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/InternalServerError'

  /auth/logout:
    post:
      tags:
        - SliceDice
      summary: Logout the user
      operationId: postLogout
      requestBody:
        description: 'logout'
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserToken'
      responses:
        '201':
          description: 'User has been successfully logged out'
          content:
            application/json:
              schema:
                type: object
                required: [ 'id' ]
                properties:
                  id:
                    type: string
                    format: 'uuid'
                  revision:
                    type: string
          headers:
            Location:
              schema:
                type: string
                format: URI
        '400':
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/InternalServerError'

  /auth/update:
    put:
      tags:
        - SliceDice
      summary: update user
      operationId: updateUser
      requestBody:
        description: 'update the user profile'
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserEntity'
      responses:
        '201':
          description: 'User has been successfully created'
          content:
            application/json:
              schema:
                type: object
                required: [ 'id' ]
                properties:
                  id:
                    type: string
                    format: 'uuid'
                  revision:
                    type: string
          headers:
            Location:
              schema:
                type: string
                format: URI
        '400':
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/InternalServerError'

  /auth/statistics:
    get:
      tags:
        - SliceDice
      summary: Get The Salaries Details
      operationId: getSalaries
      parameters:
        - in: query
          name: 'contract'
          description: 'contract type'
          schema:
            type: string
        - in: query
          name: 'department'
          description: 'department group'
          schema:
            type: string
        - in: query
          name: 'subDepartment'
          description: 'department group'
          schema:
            type: string
      responses:
        200:
          description: A list of salaries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalaryResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        500:
          $ref: '#/components/responses/InternalServerError'

  /auth/users:
    get:
      tags:
        - SliceDice
      summary: Get The Users
      operationId: getUsers
      responses:
        200:
          description: A list of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Unauthorized'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        500:
          $ref: '#/components/responses/InternalServerError'

  /auth/register:
    post:
      tags:
        - SliceDice
      summary: Save The Slice Dice  Selections
      operationId: postSaveRepo
      requestBody:
        description: 'save repo selections'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
      responses:
        '201':
          description: 'User has been successfully created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          headers:
            Location:
              schema:
                type: string
                format: URI
        '400':
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - SliceDice
      summary: 'Delete The User By name'
      operationId: 'deleteUserByName'
      requestBody:
        description: 'delete users'
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserList'
      responses:
        '204':
          description: 'User deleted'
          headers:
            ETag:
              schema:
                type: 'string'
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/ping:
    get:
      tags:
        - Connection
      summary: Check server connection.
      responses:
        '200':
          description: Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/InternalError'

  /auth/time:
    get:
      tags:
        - Connection
      summary: Get server time.
      responses:
        '200':
          description: Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerTime'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/InternalError'

  /auth/chargePointList:
    get:
      tags:
        - CentralSystem
      summary: Get a list of connected charging stations.
      operationId: ChargePointList
      responses:
        '200':
          description: Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargePointListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/InternalError'

  /auth/transactionList:
    post:
      tags:
        - CentralSystem
      summary: Transaction list.
      operationId: TransactionList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionList'
      responses:
        '200':
          description: Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/InternalError'

  /auth/reservationList:
    post:
      tags:
        - CentralSystem
      summary: Reservation list.
      operationId: ReservationList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationList'
      responses:
        '200':
          description: Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/InternalError'

  /auth/cancelReservation:
    post:
      tags:
        - ChargePoint
      summary: 5.1. Cancel Reservation
      operationId: CancelReservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelReservation'
      responses:
        '200':
          description: >
            This indicates the success or failure of the cancelling of a reservation by Central System.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelReservationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/InternalError'

  /auth/changeAvailability:
    post:
      tags:
        - ChargePoint
      summary: 5.2. Change Availability
      operationId: ChangeAvailability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeAvailability'
      responses:
        '200':
          description: >
            This indicates whether the Charge Point is able to perform the availability change.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/InternalError'

  /auth/remoteStartTransaction:
    post:
      tags:
        - ChargePoint
      summary: 5.11. Remote Start Transaction
      operationId: RemoteStartTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteStartTransactionJson'
      responses:
        '200':
          description: >
            This contains the field definitions of the RemoteStartTransaction.conf PDU sent from Charge Point to Central System.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteStartTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/InternalError'

  /auth/remoteStopTransaction:
    post:
      tags:
        - ChargePoint
      summary: 5.12. Remote Stop Transaction
      operationId: RemoteStopTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteStopTransaction'
      responses:
        '200':
          description: >
            This contains the field definition of the StopTransaction.conf PDU sent by the Central System to the Charge Point in response to a StopTransaction.req PDU.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteStopTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/InternalError'

  /auth/setChargingProfile:
    post:
      tags:
        - ChargePoint
      summary: 5.16. Set Charging Profile
      operationId: SetChargingProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetChargingProfile'
      responses:
        '200':
          description: >
            This contains the field definition of the SetChargingProfile.conf PDU sent by the Charge Point to the Central System in response to a SetChargingProfile.req PDU.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetChargingProfileResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/InternalError'

  /auth/setRate:
    post:
      tags:
        - ChargePoint
      summary: 5.16. Set Rate Object
      operationId: SetRateObject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateObject'
      responses:
        '200':
          description: >
            This contains the Rate Object details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/InternalError'

  /auth/setConnector:
    post:
      tags:
        - ChargePoint
      summary: 5.17. Set Connector Object
      operationId: SetConnector
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateObject'
      responses:
        '200':
          description: >
            This contains the Rate Object details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/InternalError'
components:
  parameters:
    Identity:
      in: path
      name: identity
      description: Charge point identity
      required: true
      schema:
        type: string
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            code: 'error.resource.not-found'
            message: 'Requested resource with ID: 3fa85f64-5717-4562-b3fc-2c963f66afa6 was not found'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            code: 'error.auth.unauthorized'
            status: 401

    InternalError:
      description: Internal error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'

    RequestEntityTooLarge:
      description: Request entity too large
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            status: 413
    ExpectationFailed:
      description: Expectation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            status: 417
            message: The user has already created credit request
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            status: 500
            message: Unexpected error while validating the request id
    ServiceUnavailable:
      description: Service not available
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            status: 503
            message: Failed to connect to VAA service
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            statusCode: 'error.request.invalid'
            message: 'Request contains invalid values or missing required properties'
    Conflict:
      description: Old Version received from Client
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            code: error.data-source.client.old-version
            message: ' client sends an update for old version of the document using If-Match header'
    PreconditionFailed:
      description: Precondition Failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            code: 'error.auth.github-access-token-expired'
            status: 412
  schemas:
    UserResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string

    UserList:
      type: array
      items:
        $ref: '#/components/schemas/UserEntity'

    UserEntity:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        displayName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        avatar:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        salary:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        department:
          type: string
          nullable: true
        on_contract:
          type: string
          nullable: true
        sub_department:
          type: string
          nullable: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressItem'
        privileges:
          type: array
          items:
            $ref: '#/components/schemas/PrivilegeItem'

    AddressItem:
      type: object
      properties:
        line1:
          type: string
        city:
          type: string

    PrivilegeItem:
      type: object
      properties:
        entity:
          type: string
        read:
          type: boolean
        create:
          type: boolean
        update:
          type: boolean
        delete:
          type: boolean
        admin:
          type: boolean

    UserToken:
      type: object
      additionalProperties: false
      properties:
        refreshToken:
          type: string

    SalaryResponse:
      type: object
      additionalProperties: false
      properties:
        department_name:
          type: string
        averageSalary:
          type: number
        minSalary:
          type: number
        maxSalary:
          type: number

    ChargingSchedule:
      type: object
      required:
        - chargingRateUnit
      properties:
        duration:
          type: integer
          format: int32
          description: >
            Duration of the charging schedule in seconds.
            If the duration is left empty, the last period will continue indefinitely or until end of the transaction in case startSchedule is absent.
        startSchedule:
          type: string
          format: date-time
        chargingRateUnit:
          type: string
          enum: [ W, A ]
          description: The unit of measure Limit is expressed in.
        startPeriod:
          type: integer
          format: int32
          description: Start of the period, in seconds from the start of schedule. The value of StartPeriod also defines the stop time of the previous period.
        limit:
          type: number
          format: double
          description: Charging rate limit during the schedule period, in the applicable chargingRateUnit, for example in Amperes or Watts.
        numberPhases:
          type: integer
          format: int32
          description: The number of phases that can be used for charging. If a number of phases is needed, numberPhases=3 will be assumed unless another number is given.
        minChargingRate:
          type: number
          format: double
          description: >
            Minimum charging rate supported by the electric vehicle. The unit of measure is defined by the chargingRateUnit.
            This parameter is intended to be used by a local smart charging algorithm to optimize the power allocation for in the case a
            charging process is inefficient at lower charging rates.

    ChargingProfile:
      type: object
      required:
        - chargingProfileId
        - stackLevel
        - chargingProfilePurpose
        - chargingProfileKind
        - chargingSchedule
      properties:
        chargingProfileId:
          type: integer
          format: int32
          description: Unique identifier for this profile.
        transactionId:
          type: integer
          format: int32
          description: Only valid if ChargingProfilePurpose is set to TxProfile, the transactionId MAY be used to match the profile to a specific transaction.
        stackLevel:
          type: integer
          format: int32
          description: Value determining level in hierarchy stack of profiles. Higher values have precedence over lower values. Lowest level is 0.
        chargingProfilePurpose:
          type: string
          description: Defines the purpose of the schedule transferred by this message.
          enum: [ ChargePointMaxProfile, TxDefaultProfile, TxProfile ]
        chargingProfileKind:
          type: string
          enum: [ Absolute, Recurring, Relative ]
          description: Indicates the kind of schedule.
        recurrencyKind:
          type: string
          enum: [ Daily, Weekly ]
          description: Indicates the start point of a recurrence.
        validFrom:
          type: string
          format: date-time
          description: Point in time at which the profile starts to be valid. If absent, the profile is valid as soon as it is received by the Charge Point.
        validTo:
          type: string
          format: date-time
          description: Point in time at which the profile stops to be valid. If absent, the profile is valid until it is replaced by another profile.
        chargingSchedule:
          $ref: '#/components/schemas/ChargingSchedule'

    SetChargingProfile:
      type: object
      required:
        - connectorId
        - csChargingProfiles
      properties:
        connectorId:
          type: integer
          format: int32
          description: >
            The connector to which the charging profile applies. If connectorId = 0,the message contains an overall limit for the Charge Point.
        csChargingProfiles:
          $ref: '#/components/schemas/ChargingProfile'

    SetChargingProfileResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: >
            Returns whether the Charge Point has been able to process the message successfully.
            This does not guarantee the schedule will be followed to the letter. There might be other constraints the Charge Point may need to take into account.
          enum: [ Accepted, Rejected, NotSupported ]

    ChargePointListResponse:
      type: object
      required:
        - ChargePointList
      properties:
        ChargePointList:
          type: array
          items:
            type: object
            properties:
              Identity:
                type: string
                description: Charge point identity.
              Address:
                type: string
              Connection:
                type: object
                properties:
                  Socket:
                    type: integer
                    format: int32
                  IP:
                    type: string
                  Port:
                    type: integer
                    format: int32
    PriceComponent:
      type: array
      items:
        type: object
        properties:
          tax:
            type: number
          step_size:
            type: number
          type:
            type: string
          price:
            type: number

    RateObject:
      type: object
      properties:
        currency:
          type: string
        price_components:
          $ref: '#/components/schemas/PriceComponent'

    Connector:
      type: object
      properties:
        active:
          type: boolean
        status:
          type: string
        type:
          type: string
        format:
          type: string
        power_type:
          type: string
        power:
          type: number
        chargestation:
          type: string
        rate:
          $ref: '#/components/schemas/RateObject'

    RemoteStartTransactionJson:
      type: object
      required:
        - idTag
      properties:
        connectorId:
          type: integer
          format: int32
          description: >
            Number of the connector on which to start the transaction. connectorId SHALL be > 0.
        idTag:
          type: string
          description: The identifier that Charge Point must use to start a transaction.
        chargingProfile:
          $ref: '#/components/schemas/ChargingProfile'

    RemoteStartTransactionResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: Status indicating whether Charge Point accepts the request to stop a transaction.
          enum: [ Accepted, Rejected ]

    RemoteStopTransaction:
      type: object
      required:
        - transactionId
      properties:
        transactionId:
          type: integer
          format: int32
          description: The identifier of the transaction which Charge Point is requested to stop.

    RemoteStopTransactionResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: Status indicating whether Charge Point accepts the request to stop a transaction.
          enum: [ Accepted, Rejected ]

    TransactionList:
      type: object
      required:
        - identity
      properties:
        identity:
          type: string
          description: Charge point identity.
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time

    TransactionListResponse:
      type: object
      required:
        - TransactionList
      properties:
        TransactionList:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int32
                description: Transaction ID.
              idTag:
                type: string
                description: The identifier to which this authorization applies.
              identity:
                type: string
              serialNumber:
                type: string
              connectorId:
                type: integer
                format: int32
              meterStart:
                type: number
                format: double
              meterStop:
                type: number
                format: double
              value:
                type: number
                format: double
              reservationId:
                type: integer
                format: int32
              reason:
                type: string
              data:
                type: object
              dateStart:
                type: string
                format: date-time
              dateStop:
                type: string
                format: date-time

    ReservationList:
      type: object
      required:
        - identity
      properties:
        identity:
          type: string
          description: Charge point identity.
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time

    ReservationListResponse:
      type: object
      required:
        - ReservationList
      properties:
        ReservationList:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int32
                description: Reservation ID.
              idTag:
                type: string
                description: The identifier to which this authorization applies.
              identity:
                type: string
              serialNumber:
                type: string
              connectorId:
                type: integer
                format: int32
              expiryDate:
                type: string
                format: date-time
              dateStart:
                type: string
                format: date-time
              dateStop:
                type: string
                format: date-time

    ChangeAvailability:
      type: object
      required:
        - connectorId
        - type
      properties:
        connectorId:
          type: integer
          format: int32
          description: >
            The id of the connector for which availability needs to change.
            Id '0' (zero) is used if the availability of the Charge Point and all its connectors needs to change.
        type:
          type: string
          enum: [ Inoperative, Operative ]
          description: This contains the type of availability change that the Charge Point should perform.

    AvailabilityResponse:
      type: object
      properties:
        status:
          type: string
          enum: [ Accepted, Rejected, Scheduled ]

    CancelReservation:
      type: object
      required:
        - reservationId
      properties:
        reservationId:
          type: integer
          format: int32
          description: Id of the reservation to cancel.

    CancelReservationResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [ Accepted, Rejected ]

    ServerTime:
      type: object
      properties:
        serverTime:
          type: integer
          description: UNIX time
      example:
        serverTime: 1642521843938

    ApiError:
      type: object
      properties:
        message:
          type: string
          description: A short, summary of the problem type. Written in english and readable for engineers.
          example: Service Unavailable
        code:
          type: string
          description: Error code. Can be used for translation.
          example: error.resource.not-found

        target:
          type: string
          description: The target of the error.

        details:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'

          description: List of failed swagger validations.
          example: |
            [
              {
                "target": ".body.name",
                "message": "should match pattern \"^([a-zA-Z])([a-zA-Z]|\\d|\\ )*$\"",
                "code": "pattern.openapi.validation"
              },
              {
                "target": ".body.logo",
                "message": "should match format \"uuid\"",
                "code": "format.openapi.validation"
              }
            ]
    response:
      type: object
      required:
        - code
        - message
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              format: int32
            message:
              type: string
    error:
      type: object
      required:
        - code
        - message
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              format: int32
            message:
              type: string
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: access_token
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
