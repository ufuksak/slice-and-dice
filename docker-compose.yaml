version: '3.7'

services:
  redis:
    image: redis:7.0.0
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - '6378:6379'

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    volumes:
      - /var/lib/rabbitmq
    command: [
        "bash", "-c",
        "rabbitmq-plugins enable rabbitmq_consistent_hash_exchange; docker-entrypoint.sh rabbitmq-server"
    ]
    ports:
      - 5672:5672
      - 15672:15672

  localstack:
    container_name: localstack
    image: localstack/localstack-light:0.14.0
    ports:
      - 4566:4566
      - 4571:4571
    environment:
      HOSTNAME_EXTERNAL: localstack
      SERVICES: "sns,sqs,s3"

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    ports:
      - '8087:80'
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: test

  mysql:
    container_name: mysql
    image: mysql:5.7
    command: --sql_mode=NO_ENGINE_SUBSTITUTION
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: test
      MYSQL_DATABASE: charging
      MYSQL_USER: test
      MYSQL_PASSWORD: test

  api:
    build:
      context: ../slice-and-dice
      target: builder
      dockerfile: Dockerfile
    ports:
      - 3002:3002
    environment:
      APP_NAME: slice-dice
      NODE_ENV: development
      PORT: 3002
      REDIS_HOST: localhost
      REDIS_PORT: 6378
      REDIS_PASSWORD:
      AWS_REGION: eu-west-1
    volumes:
      - ./src:/app/src
    command: npm run watch-node
    restart: on-failure
